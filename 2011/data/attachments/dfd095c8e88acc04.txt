[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:160 starting continuous writes to the database
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:164 checking whether writes are increasing
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:167 Get leader unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:173 Run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:173 Run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:189 Inject dependency fault
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:194 Refresh the charm
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:197 Get first upgrading unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:201 Wait for upgrade to fail on first upgrading unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:208 Ensure continuous_writes while in failure state on remaining units
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:211 Re-run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:215 Re-refresh the charm
[32mINFO    [0m juju.model:model.py:2957 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: other units upgrading first...
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:model.py:2957 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: other units upgrading first...
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:226 Resume upgrade
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:230 Wait for application to recover
[32mINFO    [0m juju.model:model.py:2957 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [executing] maintenance: stopping charm software
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:model.py:2957 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: awaiting for cluster to start
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:model.py:2957 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: awaiting for cluster to start
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:model.py:2957 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: awaiting for cluster to start
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:model.py:2957 Waiting for model:
  postgresql-k8s/0 [executing] waiting: awaiting for cluster to start
  postgresql-k8s/1 [idle] maintenance: upgrade completed
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:model.py:2957 Waiting for model:
  postgresql-k8s/0 [idle] maintenance: upgrade completed
  postgresql-k8s/1 [idle] maintenance: upgrade completed
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:model.py:2957 Waiting for model:
  postgresql-k8s/0 [idle] active: 
  postgresql-k8s/1 [idle] active: 
  postgresql-k8s/2 [idle] active: 
[32mINFO    [0m juju.model:model.py:2957 Waiting for model:
  postgresql-k8s/0 [idle] active: 
  postgresql-k8s/1 [idle] active: 
  postgresql-k8s/2 [idle] active: 
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:236 Ensure continuous_writes after rollback procedure
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:241 Checking whether no writes were lost
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1026 HTTP Request: GET https://10.1.1.36:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m pytest_operator.plugin:plugin.py:791 Model status:

Model  Controller          Cloud/Region        Version  SLA          Timestamp
test   microk8s-localhost  microk8s/localhost  3.1.7    unsupported  01:51:12Z

App                  Version  Status  Scale  Charm                Channel      Rev  Address         Exposed  Message
postgresql-k8s       14.11    active      3  postgresql-k8s                      2  10.152.183.243  no       
postgresql-test-app           active      1  postgresql-test-app  latest/edge   74  10.152.183.229  no       received database credentials of the first database

Unit                    Workload  Agent  Address     Ports  Message
postgresql-k8s/0        active    idle   10.1.1.213         
postgresql-k8s/1        active    idle   10.1.1.212         
postgresql-k8s/2*       active    idle   10.1.1.211         
postgresql-test-app/0*  active    idle   10.1.1.200         received database credentials of the first database

[32mINFO    [0m pytest_operator.plugin:plugin.py:797 Juju error logs:

unit-postgresql-k8s-2: 01:41:54 ERROR unit.postgresql-k8s/2.juju-log charms.data_platform_libs.v0.upgrade.ClusterNotReadyError - {'message': 'Pre-upgrade check failed and cannot safely upgrade', 'cause': 'postgresql-k8s/0 needs to be a synchronous standby in order to become the primary before the upgrade process can start', 'resolution': 'wait 30 seconds for postgresql-k8s/0 and run this action again'}
unit-postgresql-k8s-2: 01:43:40 ERROR unit.postgresql-k8s/2.juju-log charms.data_platform_libs.v0.upgrade.VersionError - {'message': 'Versions incompatible, charm 1 can not be upgraded to 15.0', 'cause': 'Upgrades only supported for specific versions, charm versions satisfying requirement ^15', 'resolution': ''}

[32mINFO    [0m pytest_operator.plugin:plugin.py:861 Forgetting main...